#############################################################################
# Copyright (c) 2024 László Várady
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# As an additional exemption you are allowed to compile & link against the
# OpenSSL libraries as published by the OpenSSL project. See the file
# COPYING for details.
#
#############################################################################

block source webhook(
    port("")
    auth_token("")
    paths([])
    tls_key_file("")
    tls_cert_file("")

    # for client authentication
    tls_peer_verify(no)
    tls_use_system_cert_store(no)
    tls_ca_file("")
    tls_ca_dir("")
    proxy_header("")
    include_request_headers(no)
    ...
)
{
    python(
        class("syslogng.modules.webhook.HTTPSource")
        options(
            "port" => "`port`"
            "auth_token" => "`auth_token`"
            "paths" => `paths`
            "tls_key_file" => "`tls_key_file`"
            "tls_cert_file" => "`tls_cert_file`"

            "tls_peer_verify" => `tls_peer_verify`
            "tls_use_system_cert_store" => `tls_use_system_cert_store`
            "tls_ca_file" => "`tls_ca_file`"
            "tls_ca_dir" => "`tls_ca_dir`"
            "proxy_header" => "`proxy_header`"
            "include_request_headers" => `include_request_headers`
        )
        `__VARARGS__`
    );
};

block source webhook-json(
    port("")
    auth_token("")
    prefix("")
    paths([])
    tls_key_file("")
    tls_cert_file("")

    # for client authentication
    tls_peer_verify(no)
    tls_use_system_cert_store(no)
    tls_ca_file("")
    tls_ca_dir("")
    ...
)
{
    channel {
        source {
            webhook(
                port("`port`") auth_token("`auth_token`") paths(`paths`)
                tls_key_file("`tls_key_file`") tls_cert_file("`tls_cert_file`")

                tls_peer_verify(`tls_peer_verify`)
                tls_use_system_cert_store(`tls_use_system_cert_store`)
                tls_ca_file("`tls_ca_file`") tls_ca_dir("`tls_ca_dir`")
                `__VARARGS__`
            );
        };

        parser {
            json-parser(prefix("`prefix`"));
        };
    };
};
